import numpy as np

class AlmeidaOscillator:

    def __init__ (self, V_R = 44.4, k_R = 3.54, k_Rr = 80.1, V_E = 30.3,
                  k_E = 214, k_Er = 1.24, V_D = 202, k_D = 5.32, 
                  k_Dr = 94.7, G_ror = 2.55, G_rev = 0.4, G_p = 0.844,
                  G_c = 2.34, G_db = 0.156, G_E4 = 0.295, G_pc = 0.19,
                  G_cp = 0.141, G_bp = 2.58):
        """
        Parameters of an Almeida oscillator 
        Reference: Almeida S; Chaves M and Delauney F. 
        Transcription-based circadian mechanism controls the duration of 
        molecular clock states in response to signaling inputs. 
        J Theor Biol 2020;484:110015
        """
        self.V_R   = V_R
        self.k_R   = k_R 
        self.k_Rr  = k_Rr
        self.V_E   = V_E
        self.k_E   = k_E
        self.k_Er  = k_Er
        self.V_D   = V_D
        self.k_D   = k_D
        self.k_Dr  = k_Dr
        self.G_ror = G_ror
        self.G_rev = G_rev
        self.G_p   = G_p  
        self.G_c   = G_c  
        self.G_db  = G_db 
        self.G_E4  = G_E4 
        self.G_pc  = G_pc 
        self.G_cp  = G_cp 
        self.G_bp  = G_bp 

        self.dimension = 8


    def dynamics (self, y0, t): 
        """
        Almeida model for mammalian circadian oscillations
        Reference: Almeida S, Chaves M, Delaunay F.
        Transcription-based circadian mechanism controls the duration of 
        molecular clock states in response to signaling inputs 
        J Theor Biol. 2020;484:110015
        """ 

        f = np.zeros_like(y0)
        BMAL1   = y0[0::8]
        ROR     = y0[1::8]
        REV     = y0[2::8]
        DBP     = y0[3::8]
        E4BP4   = y0[4::8]
        CRY     = y0[5::8]
        PER     = y0[6::8]
        PER_CRY = y0[7::8]

        fBMAL1   = f[0::8]
        fROR     = f[1::8]
        fREV     = f[2::8]
        fDBP     = f[3::8]
        fE4BP4   = f[4::8]
        fCRY     = f[5::8]
        fPER     = f[6::8]
        fPER_CRY = f[7::8]

        # regulatory boxes (clock-controlled elements)
        E_box = self.V_E * BMAL1 / (BMAL1 + self.k_E + (self.k_Er*BMAL1*CRY))
        RRE   = self.V_R * (ROR / (self.k_R + ROR)) * \
                (self.k_Rr**2 / (self.k_Rr**2 + REV**2)) 
        D_box = self.V_D * (DBP / (DBP + self.k_D)) * (self.k_Dr / (self.k_Dr + E4BP4))

        # odes
        fBMAL1[:]   = RRE - self.G_bp * BMAL1 * PER_CRY
        fROR[:]     = E_box + RRE - self.G_ror * ROR
        fREV[:]     = 2 * E_box + D_box - self.G_rev * REV
        fDBP[:]     = E_box - self.G_db * DBP
        fE4BP4[:]   = 2 * RRE - self.G_E4 * E4BP4
        fCRY[:]     = E_box + 2 * RRE - self.G_pc* PER * CRY + \
            self.G_cp * PER_CRY - self.G_c * CRY
        fPER[:]     = E_box + D_box - self.G_pc * PER * CRY +  \
            self.G_cp * PER_CRY - self.G_p * PER
        fPER_CRY[:] = self.G_pc * PER * CRY - self.G_cp * PER_CRY - \
            self.G_bp * BMAL1 * PER_CRY
        
        return f       

# initial conditions to start simulations for different G_p
y0_Gp = np.array([2.36599763e-01, 5.30014847e+00, 7.20894127e+01, 9.11553417e-01,
       5.57510216e+01, 5.72308425e+00, 1.56358445e+01, 2.39929040e+01,
       7.11258591e+00, 9.65087489e+00, 4.38434149e+01, 9.37940380e-01,
       1.13328886e+02, 1.61307166e+01, 3.69640295e+00, 6.89851443e-01,
       2.92000989e+01, 8.51803070e+00, 6.42014699e+01, 3.67315648e+00,
       1.40113916e+02, 9.24086710e+00, 1.20644809e+01, 2.80263460e-01,
       9.27240553e+00, 4.25941254e+00, 1.08357647e+02, 6.49884448e+00,
       1.04425964e+02, 1.98222742e+00, 3.89028831e+01, 5.99531044e-01,
       2.52181848e-01, 1.47980328e+00, 1.35630600e+02, 4.60407778e+00,
       5.89001274e+01, 5.37918673e-01, 6.28404317e+01, 5.44920904e+00,
       8.55382749e-02, 9.68597989e-01, 1.35412981e+02, 2.69204765e+00,
       3.22641248e+01, 4.53171897e-01, 6.31483528e+01, 1.12328274e+01,
       1.12735986e-01, 1.75237449e+00, 1.12508734e+02, 1.58513210e+00,
       2.69528853e+01, 1.07787821e+00, 4.57749864e+01, 1.69354862e+01,
       2.16465449e-01, 4.73161193e+00, 7.70536047e+01, 9.76408382e-01,
       5.03651774e+01, 4.76271025e+00, 1.82786586e+01, 2.35312195e+01,
       2.61263505e+00, 9.03679341e+00, 4.65125511e+01, 8.03127518e-01,
       1.03978118e+02, 1.48593644e+01, 3.94059017e+00, 2.71965580e+00,
       2.89173875e+01, 9.00067935e+00, 5.93146585e+01, 3.17803330e+00,
       1.39539832e+02, 1.07681159e+01, 9.99520941e+00, 2.73350342e-01,
       1.24426493e+01, 4.91409069e+00, 1.01303286e+02, 6.25110571e+00,
       1.11419190e+02, 2.63379937e+00, 3.27738297e+01, 5.03989725e-01,
       4.05482164e-01, 1.76115569e+00, 1.32251708e+02, 4.96739296e+00,
       6.58253835e+01, 6.53313572e-01, 5.79530008e+01, 4.13181931e+00,
       9.60194249e-02, 1.02335456e+00, 1.36081952e+02, 2.94172218e+00,
       3.61722566e+01, 4.70599175e-01, 6.12907648e+01, 1.03977423e+01,
       1.05199298e-01, 1.53744158e+00, 1.17108211e+02, 1.74359725e+00,
       2.71425943e+01, 9.27206282e-01, 4.72878645e+01, 1.57302455e+01,
       1.93358275e-01, 4.02995030e+00, 8.37239925e+01, 1.07043304e+00,
       4.41143702e+01, 3.70164410e+00, 2.21159115e+01, 2.25652827e+01,
       9.43985850e-01, 8.20395946e+00, 5.13385486e+01, 7.71525684e-01,
       9.20804389e+01, 1.28598413e+01, 5.00405267e+00, 8.57306248e+00,
       2.70431508e+01, 9.51359971e+00, 5.38702605e+01, 2.59722965e+00,
       1.36669924e+02, 1.26509113e+01, 7.93845516e+00, 2.72943509e-01,
       1.65622467e+01, 5.73684695e+00, 9.23793541e+01, 5.75965629e+00,
       1.19353104e+02, 3.68247229e+00, 2.61720203e+01, 4.24801590e-01,
       9.29528099e-01, 2.20473856e+00, 1.27508478e+02, 5.42780887e+00,
       7.46569944e+01, 8.48062766e-01, 5.22839749e+01, 2.52595705e+00,
       1.15110168e-01, 1.11581292e+00, 1.36211176e+02, 3.26884015e+00,
       4.13974944e+01, 4.99976225e-01, 5.92599834e+01, 9.29526919e+00,
       9.93191805e-02, 1.35709036e+00, 1.21870976e+02, 1.94850687e+00,
       2.82032216e+01, 7.96833781e-01, 4.88358821e+01, 1.44444235e+01,
       1.71689712e-01, 3.32545606e+00, 9.12490985e+01, 1.19181784e+00,
       3.84855027e+01, 2.78669054e+00, 2.64979978e+01, 2.10587201e+01,
       5.12675380e-01, 7.22749296e+00, 5.77805637e+01, 8.06777715e-01,
       7.93923102e+01, 1.04529016e+01, 6.93889305e+00, 1.45664038e+01,
       2.26641338e+01, 9.84697885e+00, 4.92172056e+01, 2.00592769e+00,
       1.30224358e+02, 1.44252672e+01, 6.19654708e+00, 2.90325554e-01,
       2.08022838e+01, 6.63094679e+00, 8.27237009e+01, 5.05692160e+00,
       1.26531970e+02, 5.18598175e+00, 2.01111490e+01, 3.66993493e-01,
       2.60284770e+00, 2.83948391e+00, 1.21230553e+02, 5.86707718e+00,
       8.46155767e+01, 1.17816293e+00, 4.58709794e+01, 1.35034635e+00,
       1.49701663e-01, 1.26173339e+00, 1.35348398e+02, 3.65643512e+00,
       4.78540340e+01, 5.51307885e-01, 5.67431945e+01, 7.96545063e+00,
       9.75365161e-02, 1.24290329e+00, 1.26011458e+02, 2.19137211e+00,
       3.03485856e+01, 7.07542985e-01, 4.99088309e+01, 1.31775662e+01,
       1.52940619e-01, 2.71416400e+00, 9.87707775e+01, 1.33662042e+00,
       3.43675608e+01, 2.10412365e+00, 3.07077240e+01, 1.93065518e+01,
       3.53268829e-01, 6.21509211e+00, 6.51172895e+01, 8.74740621e-01,
       6.75588419e+01, 8.09810825e+00, 9.72264640e+00, 1.85225095e+01,
       1.57387260e+01, 9.77764476e+00, 4.66687040e+01, 1.46157413e+00,
       1.20220179e+02, 1.54309394e+01, 4.87146940e+00, 3.53917105e-01,
       2.40758315e+01, 7.50101261e+00, 7.35828406e+01, 4.28464163e+00,
       1.31447427e+02, 7.05752902e+00, 1.52786253e+01, 3.28342500e-01,
       5.57544538e+00, 3.60692849e+00, 1.13623291e+02, 6.10022031e+00,
       9.46635416e+01, 1.68213282e+00, 3.91178824e+01, 8.31119447e-01,
       2.13405735e-01, 1.47050896e+00, 1.33380942e+02, 4.07906206e+00,
       5.52035510e+01, 6.32537534e-01, 5.36638414e+01, 6.45940285e+00,
       1.01225870e-01, 1.19811190e+00, 1.29039420e+02, 2.45833090e+00,
       3.34745613e+01, 6.60345047e-01, 5.02581264e+01, 1.19679480e+01,
       1.38108515e-01, 2.24655205e+00, 1.05534434e+02, 1.49714355e+00,
       3.20325276e+01, 1.64220598e+00, 3.41710227e+01, 1.76196583e+01,
       2.78143945e-01, 5.28461313e+00, 7.25729579e+01, 9.60341091e-01,
       5.77574727e+01, 6.17462655e+00, 1.30485545e+01, 2.02286339e+01,
       7.58940815e+00, 9.21240560e+00, 4.72473835e+01, 1.04227393e+00,
       1.08294012e+02, 1.49856923e+01, 4.17117086e+00, 6.53664004e-01,
       2.55622624e+01, 8.25282228e+00, 6.58980988e+01, 3.57679022e+00,
       1.33260115e+02, 9.02765535e+00, 1.18267560e+01, 3.06508516e-01,
       9.11026644e+00, 4.39951655e+00, 1.05497995e+02, 6.04013648e+00,
       1.03692197e+02, 2.36007351e+00, 3.27430075e+01, 6.11524340e-01])